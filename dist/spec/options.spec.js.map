{"version":3,"sources":["options.spec.js"],"names":[],"mappings":";;AAAA,SAAS,SAAT,EAAoB,MAAM;;AAExB,KAAI,mDAAJ,EAAyD,MAAM;AAC7D,QAAI,UAAU;AACZ,UAAI,EADQ;AAEZ,YAAM;AAFM,KAAd;AAIA,QAAI,SAAS;AACX,UAAI,IADO;AAEX,YAAM;AAFK,KAAb;AAIA,YAAQ,MAAR,CAAe,MAAf,EAAuB,OAAvB;AACA,WAAO,OAAO,EAAd,EAAkB,OAAlB,CAA0B,QAAQ,EAAlC;AACA,WAAO,OAAO,IAAd,EAAoB,OAApB,CAA4B,QAAQ,IAApC;AACD,GAZD;;AAcA,KAAI,2DAAJ,EAAiE,MAAM;AACrE,QAAI,UAAU;AACZ,YAAM;AADM,KAAd;AAGA,YAAQ,MAAR,CAAe,MAAf,EAAuB,OAAvB;AACA,WAAO,OAAO,IAAd,EAAoB,aAApB;AACD,GAND;AAQD,CAxBD","file":"options.spec.js","sourcesContent":["describe(\"Options\", () => {\n\n  it (\"should assign all properties to the target object\", () => {\n    var options = {\n      id: 42,\n      name: \"#TEXT\"\n    };\n    var target = {\n      id: null,\n      name: null\n    };\n    Options.assign(target, options);\n    expect(target.id).toEqual(options.id);\n    expect(target.name).toEqual(options.name);\n  });\n\n  it (\"should not extend property which is not defined in target\", () => {\n    var options = {\n      name: \"#TEXT\"\n    };\n    Options.assign(target, options);\n    expect(target.name).toBeUndefined();\n  });\n\n});"],"sourceRoot":"/source/"}