{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/batch-execution-context.js","src/batch.js","src/cancellation-token-source.js","src/cancellation-token.js","src/json-media-type-formatter.js","src/media-type-formatter.js","src/options.js","src/query-base.js","src/query-factory.js","src/query-translator.js","src/query.js","src/repository.js","src/rest-bulk-request-message.js","src/rest-bulk-response-message.js","src/rest-client.js","src/rest-request-message.js","src/rest-response-message.js","src/rest.js"],"names":[],"mappings":"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","file":"rest.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Options from 'options';\r\n\r\nexport default class BatchExecutionContext {\r\n\r\n  constructor(options) {\r\n    this.batch = null;\r\n    this.client = null;\r\n    this.requestMessages = [];\r\n    Options.extend(this, options);\r\n  }\r\n\r\n  static get current() {\r\n    var activeExecutionContexts = BatchExecutionContext.activeExecutionContexts;\r\n    if (activeExecutionContexts && activeExecutionContexts.length > 0) {\r\n      return activeExecutionContexts[activeExecutionContexts.length - 1];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static begin(options) {\r\n    var context = new BatchExecutionContext(options);\r\n    if (!BatchExecutionContext.activeExecutionContexts) {\r\n      BatchExecutionContext.activeExecutionContexts = [];\r\n    }\r\n    BatchExecutionContext.activeExecutionContexts.push(context);\r\n  }\r\n\r\n  static end() {\r\n    if (BatchExecutionContext.activeExecutionContexts) {\r\n      BatchExecutionContext.activeExecutionContexts.pop();\r\n    }\r\n  }\r\n}","import CancellationToken from \"cancellation-token\";\r\nimport BatchExecutionContext from \"batch-execution-context\";\r\n\r\nexport default class Batch {\r\n\r\n  constructor() {\r\n    this._operations = [];\r\n  }\r\n\r\n  add(operation) {\r\n    if (operation && typeof operation === 'function') {\r\n      this._operations.push(operation);\r\n    } else {\r\n      throw {\r\n        message: \"Operation is not defined or it's type is invalid\"\r\n      };\r\n    }\r\n    return this;\r\n  }\r\n\r\n  execute(cancellationToken = CancellationToken.none) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this._operations && this._operations.length > 0) {\r\n          BatchExecutionContext.begin({\r\n            batch: this\r\n          });\r\n          this._operations.forEach(operation => {\r\n            operation();\r\n          });\r\n          BatchExecutionContext.end();\r\n        }\r\n        resolve();\r\n      } catch (ex) {\r\n        reject(ex);\r\n      }\r\n    });\r\n  }\r\n\r\n}","import CancellationToken from 'cancellation-token';\r\n\r\nexport default class CancellationTokenSource {\r\n\r\n  constructor() {\r\n    this.canceled = false;\r\n    this.token = new CancellationToken();\r\n    this.linkedTokens = [];\r\n  }\r\n\r\n  cancel() {\r\n    this.canceled = true;\r\n    this._propagateToCancellationToken(this.token);\r\n    if (this.linkedTokens && this.linkedTokens.length > 0) {\r\n      for (var linkedToken in this.linkedTokens) {\r\n        this._propagateToCancellationToken(linkedToken);\r\n      }\r\n    }\r\n  }\r\n\r\n  cancelAfter(delay) {\r\n    setTimeout(() => {\r\n      this.cancel();\r\n    }, delay);\r\n  }\r\n\r\n  _propagateToCancellationToken(cancellationToken) {\r\n    if (cancellationToken) {\r\n      cancellationToken.canceled = true;\r\n      if (cancellationToken.waitHandle) {\r\n        cancellationToken.waitHandle();\r\n      }\r\n    }\r\n  }\r\n\r\n  static createLinkedCancellationTokenSource(linkedTokens) {\r\n    var cancellationTokenSource = new CancellationTokenSource(linkedTokens);\r\n    if (linkedTokens) {\r\n      if (linkedTokens instanceof Array) {\r\n        linkedTokens.forEach(linkedToken => {\r\n          cancellationTokenSource.linkedTokens.push(linkedToken);\r\n        });\r\n      } else {\r\n        cancellationTokenSource.linkedTokens.push(linkedTokens);\r\n      }\r\n    }\r\n    return cancellationTokenSource;\r\n  }\r\n\r\n}","export default class CancellationToken {\r\n\r\n  constructor(canceled = false) {\r\n    this.canceled = canceled;\r\n    this.WaitHandle = null;\r\n  }\r\n\r\n  register(waitHandle) {\r\n    this.waitHandle = waitHandle;\r\n  }\r\n\r\n  throwIfCanceled() {\r\n    if (this.canceled) {\r\n      throw {\r\n        message: \"Operation has been canceled\"\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nCancellationToken.none = new CancellationToken();","import MediaTypeFormatter from 'media-type-formatter';\r\n\r\nexport default class JsonMediaTypeFormatter extends MediaTypeFormatter {\r\n\r\n  constructor(options) {\r\n    super(options);\r\n    this.mediaTypes.push('application/json');\r\n    this.defaultMediaType = 'application/json';\r\n  }\r\n\r\n  read(text, objectType) {\r\n    if (text) {\r\n      var value = JSON.parse(text);\r\n      if (objectType) {\r\n        if (value instanceof Array) {\r\n          var array = [];\r\n          value.forEach(item => {\r\n            array.push(new objectType(item));\r\n          });\r\n          return array;\r\n        } else {\r\n          value = new objectType(value);\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  write(value) {\r\n    if (value) {\r\n      return JSON.stringify(value);\r\n    }\r\n    return null;\r\n  }\r\n}","import Options from 'options';\r\n\r\nexport default class MediaTypeFormatter {\r\n\r\n  constructor(options) {\r\n    this.mediaTypes = [];\r\n    this.defaultMediaType = null;\r\n    Options.extend(this, options);\r\n  }\r\n\r\n  canReadType(objectType) {\r\n    return true;\r\n  }\r\n\r\n  carWriteType(objectType) {\r\n    return true;\r\n  }\r\n\r\n  read(content, objectType) {\r\n    throw new {\r\n      message: \"Method 'read' is not supported for class 'MediaTypeFormatter'\"\r\n    };\r\n  }\r\n\r\n  write(value) {\r\n    throw new {\r\n      message: \"Method 'write' is not supported for class 'MediaTypeFormatter'\"\r\n    };\r\n  }\r\n\r\n}","export default class Options {\r\n\r\n  static extend(target, options) {\r\n    if (target && options) {\r\n      for (var propertyName in options) {\r\n        if (propertyName in target) {\r\n          target[propertyName] = options[propertyName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","import Options from 'options';\r\nimport CancellationToken from 'cancellation-token';\r\n\r\nexport default class QueryBase {\r\n\r\n  constructor(options) {\r\n    this.client = null;\r\n    this.method = 'GET';\r\n    this.path = '/';\r\n    this.headers = {};\r\n    this.content = null;\r\n    this.parameters = {};\r\n    this.timeout = 0;\r\n    Options.extend(this, options);\r\n  }\r\n\r\n  setMethod(value) {\r\n    if (!value) {\r\n      throw {\r\n        message: \"Parameter 'value' is not passed to the method 'setMethod'\"\r\n      };\r\n    }\r\n    this.method = value;\r\n    return this;\r\n  }\r\n\r\n  setPath(value) {\r\n    if (!value) {\r\n      throw {\r\n        message: \"Parameter 'value' is not passed to the method 'setPath'\"\r\n      };\r\n    }\r\n    this.path = value;\r\n    return this;\r\n  }\r\n\r\n  setHeader(name, value) {\r\n    if (!name) {\r\n      throw {\r\n        message: \"Parameter 'name' is not passed to method 'setHeader'\"\r\n      };\r\n    }\r\n    this.headers[name] = value;\r\n    return this;\r\n  }\r\n\r\n  setContent(value) {\r\n    this.content = value;\r\n    return this;\r\n  }\r\n\r\n  setParameter(name, value) {\r\n    if (!name) {\r\n      throw {\r\n        message: \"Parameter 'name' is not passed to method 'setParameter'\"\r\n      };\r\n    }\r\n    this.parameters[name] = value;\r\n    return this;\r\n  }\r\n\r\n  setParameters(parameters) {\r\n    if (parameters) {\r\n      for (var parameterName in parameters) {\r\n        this.setParameter(parameterName, parameters[parameterName]);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setTimeout(value) {\r\n    this.timeout = value;\r\n    return this;\r\n  }\r\n\r\n  execute(cancellationToken = CancellationToken.none) {\r\n    return new Promise((resolve, reject) => {\r\n      var queryTranslator = null;\r\n      if (this.client && this.client.services) {\r\n        queryTranslator = this.client.services.queryTranslator;\r\n      }\r\n      if (queryTranslator) {\r\n        this.client\r\n          .send(queryTranslator.translate(this), cancellationToken)\r\n          .then(resolve)\r\n          .catch(reject);\r\n      } else {\r\n        reject({\r\n          message: \"Query translator is undefined\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  get() {\r\n    return this.setMethod('GET');\r\n  }\r\n\r\n  save() {\r\n    return this.setMethod('POST');\r\n  }\r\n\r\n  update() {\r\n    return this.setMethod('PUT');\r\n  }\r\n\r\n  patch() {\r\n    return this.setMethod('PATCH');\r\n  }\r\n\r\n  del() {\r\n    return this.setMethod('DELETE');\r\n  }\r\n\r\n}","import Query from 'query';\r\n\r\nexport default class QueryFactory {\r\n\r\n  create(options) {\r\n    return new Query(options);\r\n  }\r\n\r\n}","import RestRequestMessage from 'rest-request-message';\r\n\r\nexport default class QueryTranslator {\r\n\r\n  constructor() {\r\n    this._parameterNameCache = {};\r\n  }\r\n\r\n  translate(query) {\r\n    var requestMessage = null;\r\n    if (query) {\r\n      requestMessage = new RestRequestMessage({\r\n        method: query.method,\r\n        path: this.getPath(query),\r\n        queryString: this.getQueryString(query),\r\n        headers: query.headers,\r\n        content: query.content,\r\n        timeout: query.timeout\r\n      });\r\n    } else {\r\n      throw {\r\n        message: \"Parameter 'query' is not passed to the method 'translate'\"\r\n      };\r\n    }\r\n    return requestMessage;\r\n  }\r\n\r\n  getPath(query) {\r\n    var path = null;\r\n    if (query) {\r\n      path = query.path;\r\n      var parameterNames = this.getParameterNames(query.path);\r\n      if (parameterNames && parameterNames.length > 0) {\r\n        parameterNames.forEach(parameterName => {\r\n          if (query.parameters) {\r\n            if (parameterName in query.parameters) {\r\n              path = path.replace(`{${parameterName}}`, query.parameters[parameterName]);\r\n            } else {\r\n              path = path.replace(`/{${parameterName}}`, '');\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return path;\r\n  }\r\n\r\n  getQueryString(query) {\r\n    var queryString = '';\r\n    if (query && query.parameters) {\r\n      var pathParameterNames = this.getParameterNames(query.path);\r\n      for(var parameterName in query.parameters) {\r\n        if (!pathParameterNames || pathParameterNames.indexOf(parameterName) === -1) {\r\n          if (query.parameters[parameterName] !== null && query.parameters[parameterName] !== undefined) {\r\n            if (queryString) {\r\n              queryString += '&';\r\n            }\r\n            queryString += `${parameterName}=${query.parameters[parameterName]}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return queryString;\r\n  }\r\n\r\n  getParameterNames(path) {\r\n    var names = null;\r\n    if (path) {\r\n      var result = path.match(/\\{(.*?)\\}/g);\r\n      if (result && result.length > 0) {\r\n        names = [];\r\n        result.forEach(text => {\r\n          names.push(text.substring(1, text.length - 1));\r\n        });\r\n      }\r\n    }\r\n    return names;\r\n  }\r\n\r\n}","import QueryBase from 'query-base';\r\n\r\nexport default class Query extends QueryBase {\r\n\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n\r\n  skip(value) {\r\n    return this.setParameter('skip', value);\r\n  }\r\n\r\n  take(value) {\r\n    return this.setParameter('take', value);\r\n  }\r\n\r\n}","import CancellationToken from \"cancellation-token\";\r\nimport Options from 'options';\r\n\r\nexport default class Repository {\r\n\r\n  constructor(options) {\r\n    this.client = null;\r\n    this.path = null;\r\n    this.objectType = null;\r\n    Options.extend(this, options);\r\n  }\r\n\r\n  query() {\r\n    var query = null;\r\n    var queryFactory = null;\r\n    if (this.client && this.client.services) {\r\n      queryFactory = this.client.services.queryFactory;\r\n    }\r\n    if (queryFactory) {\r\n      query = queryFactory.create({\r\n        client: this.client,\r\n        path: this.path\r\n      });\r\n    } else {\r\n      throw {\r\n        message: \"Query factoy is undefined\"\r\n      };\r\n    }\r\n    return query;\r\n  }\r\n\r\n  get(parameters, cancellationToken = CancellationToken.none) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this\r\n          .query({\r\n            client: this.client,\r\n            path: this.path\r\n          })\r\n          .get()\r\n            .setParameters(parameters)\r\n            .execute(cancellationToken)\r\n            .then(responseMessage => {\r\n              if (responseMessage.status >= 200 && responseMessage.status < 300) {\r\n                resolve(responseMessage.content);\r\n              } else {\r\n                if (responseMessage.content) {\r\n                  reject(responseMessage.content);\r\n                } else {\r\n                  reject({\r\n                    message: responseMessage.statusText\r\n                  });\r\n                }\r\n              }\r\n            })\r\n            .catch(ex => reject(ex));\r\n      } catch(ex) {\r\n        reject(ex);\r\n      }\r\n    });\r\n    // if (!BatchExecutionContext.current) {\r\n    //   return this.client.send(requestMessage);\r\n    // } else {\r\n    //   var context = BatchExecutionContext.current;\r\n    //   if (!context.client) {\r\n    //     context.client = this.client;\r\n    //   } else if (context.client == this.client) {\r\n    //     context.requestMessages.push(requestMessage);\r\n    //   } else {\r\n    //     // TODO: review error message\r\n    //     throw {\r\n    //       message: \"All operation has to use same rest client\"\r\n    //     };\r\n    //   }\r\n    //   // TODO: bla bla bla\r\n    //   // return promise...\r\n    // }\r\n  }\r\n\r\n  save(parameters, value, cancellationToken = CancellationToken.none) {\r\n    throw {\r\n      message: \"Not implemented\"\r\n    };\r\n  }\r\n\r\n  update(parameters, value, cancellationToken = CancellationToken.none) {\r\n    throw {\r\n      message: \"Not implemented\"\r\n    };\r\n  }\r\n\r\n  patch(parameters, value, cancellationToken = CancellationToken.none) {\r\n    throw {\r\n      message: \"Not implemented\"\r\n    };\r\n  }\r\n\r\n  del(parameters, value, cancellationToken = CancellationToken.none) {\r\n    throw {\r\n      message: \"Not implemented\"\r\n    };\r\n  }\r\n\r\n}","import Options from 'options';\r\nimport RestRequestMessage from 'rest-request-message';\r\n\r\nexport default class RestBulkRequestMessage {\r\n\r\n  constructor(options) {\r\n    this.method = null;\r\n    this.path = null;\r\n    this.headers = null;\r\n    this.timeout = null;\r\n    this.requestMessages = [];\r\n    Options.extend(this, options);\r\n  }\r\n\r\n  add(message) {\r\n    if (message && message instanceof RestRequestMessage) {\r\n      if (this.requestMessages) {\r\n        this.requestMessages.push(message);\r\n      }\r\n    } else {\r\n      throw {\r\n        message: \"Message is undefined or it's type is invalid\"\r\n      };\r\n    }\r\n    return this;\r\n  }\r\n\r\n}","import Options from 'options';\r\n\r\nexport default class RestBulkResponseMessage {\r\n\r\n  constructor() {\r\n    this.status = null;\r\n    this.statusText = null;\r\n    this.headers = null;\r\n    this.responseMessages = [];\r\n    Options.extend(this, options);\r\n  }\r\n\r\n}","import Options from 'options';\r\nimport CancellationToken from 'cancellation-token';\r\nimport RestRequestMessage from 'rest-request-message';\r\nimport RestResponseMessage from 'rest-response-message';\r\nimport RestBulkRequestMessage from 'rest-bulk-request-message';\r\nimport RestBulkResponseMessage from 'rest-bulk-response-message';\r\nimport JsonMediaTypeFormatter from 'json-media-type-formatter';\r\nimport QueryFactory from 'query-factory';\r\nimport QueryTranslator from 'query-translator';\r\n\r\nconst DONE = 4;\r\n\r\nexport default class RestClient {\r\n\r\n  constructor(options) {\r\n    this.protocol = 'http';\r\n    this.host = 'localhost';\r\n    this.port = 80;\r\n    this.timeout = 30;\r\n    this.mediaTypeFormatters = [\r\n      new JsonMediaTypeFormatter()\r\n    ];\r\n    this.services = {\r\n      queryFactory: new QueryFactory(),\r\n      queryTranslator: new QueryTranslator()\r\n    };\r\n    this.interceptors = [];\r\n    Options.extend(this, options);\r\n  }\r\n\r\n  send(requestMessage, cancellationToken = CancellationToken.none) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        var httpRequest = null;\r\n        cancellationToken.throwIfCanceled();\r\n        cancellationToken.register(() => {\r\n          try {\r\n            if (httpRequest) {\r\n              httpRequest.abort();\r\n            }\r\n            cancellationToken.throwIfCanceled();\r\n          } catch (ex) {\r\n            reject(ex);\r\n          }\r\n        });\r\n        httpRequest = new XMLHttpRequest();\r\n        if (requestMessage && requestMessage instanceof RestRequestMessage) {\r\n          this._sendMessage(requestMessage, httpRequest, resolve, reject);\r\n        } else if (requestMessage && requestMessage instanceof RestBulkRequestMessage) {\r\n          this._sendBulkMessage(requestMessage, httpRequest, resolve, reject);\r\n        } else {\r\n          throw {\r\n            message: \"Message is undefined or it's type is invalid\"\r\n          };\r\n        }\r\n      } catch (ex) {\r\n        reject(ex);\r\n      }\r\n    });\r\n  }\r\n\r\n  _sendMessage(requestMessage, httpRequest, resolve, reject) {\r\n    var url = '';\r\n    if (this.protocol) {\r\n      url += `${this.protocol}://`;\r\n    } else {\r\n      url += 'http://';\r\n    }\r\n    if (this.host) {\r\n      url += `${this.host}`;\r\n    } else {\r\n      url += 'localhost';\r\n    }\r\n    if (this.port && this.port !== 80) {\r\n      url += `:${this.port}`;\r\n    }\r\n    if (!requestMessage.path.startsWith('/')) {\r\n      requestMessage.path = '/' + requestMessage.path;\r\n    }\r\n    url += requestMessage.path;\r\n    if (requestMessage.queryString) {\r\n      url += '?' + requestMessage.queryString;\r\n    }\r\n    httpRequest.open(requestMessage.method, url, true);\r\n    httpRequest.timeout = this.timeout;\r\n    if ('timeout' in requestMessage && requestMessage.timeout > 0) {\r\n      httpRequest.timeout = requestMessage.timeout;\r\n    }\r\n    if (!requestMessage.accept) {\r\n      requestMessage.accept = 'application/json';\r\n    }\r\n    httpRequest.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    if (requestMessage.headers) {\r\n      for (var headerName in requestMessage.headers) {\r\n        httpRequest.setRequestHeader(headerName, requestMessage.headers[headerName]);\r\n      }\r\n    }\r\n    httpRequest.onreadystatechange = () => {\r\n      if (httpRequest && httpRequest.readyState === DONE) {\r\n        if (httpRequest.status !== 0) {\r\n          var content = null;\r\n          var contentType = httpRequest.getResponseHeader(\"Content-Type\");\r\n          if (httpRequest.responseText) {\r\n            var mediaTypeFormatter = this._getMediaTypeFormatter(contentType);\r\n            if (mediaTypeFormatter) {\r\n              content = mediaTypeFormatter.read(httpRequest.responseText);\r\n            } else {\r\n              content = httpRequest.responseText;\r\n            }\r\n          }\r\n          var headers = this._getResponseHeaders(httpRequest);\r\n          resolve(new RestResponseMessage({\r\n            requestMessage: requestMessage,\r\n            status: httpRequest.status,\r\n            statusText: httpRequest.statusText,\r\n            headers: headers,\r\n            content: content,\r\n            contentType: contentType\r\n          }));\r\n        } else {\r\n          reject({\r\n            message: \"Failed to connect to the server\"\r\n          });\r\n        }\r\n      }\r\n    };\r\n    httpRequest.send();\r\n  }\r\n\r\n  _sendBulkMessage(bulkRequestMessage, httpRequest, resolve, reject) {\r\n    setTimeout(() => {\r\n      resolve(new RestBulkResponseMessage());\r\n    }, 5000);\r\n  }\r\n\r\n  _getMediaTypeFormatter(contentType) {\r\n    var mediaTypeFormatter = null;\r\n    if (contentType && this.mediaTypeFormatters && this.mediaTypeFormatters.length > 0) {\r\n      for (var i = 0; i < this.mediaTypeFormatters.length; i++) {\r\n        if (this.mediaTypeFormatters[i].contentType === contentType) {\r\n          mediaTypeFormatter = this.mediaTypeFormatters[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return mediaTypeFormatter;\r\n  }\r\n\r\n  _getResponseHeaders(httpRequest) {\r\n    var headers = {};\r\n    var text = httpRequest.getAllResponseHeaders();\r\n    if (text) {\r\n      var pairs = text.split('\\r\\n');\r\n      pairs.forEach(pair => {\r\n        if (pair) {\r\n          var name = pair.substring(0, pair.indexOf(':'));\r\n          var value = pair.substring(pair.indexOf(':') + 2, pair.length);\r\n          headers[name] = value;\r\n        }\r\n      });\r\n    }\r\n    return headers;\r\n  }\r\n\r\n}","import Options from 'options';\r\n\r\nexport default class RestRequestMessage {\r\n\r\n  constructor(options) {\r\n    this.method = null;\r\n    this.path = null;\r\n    this.queryString = null;\r\n    this.headers = null;\r\n    this.accept = null;\r\n    this.content = null;\r\n    this.contentType = null;\r\n    this.objectType = null;\r\n    this.timeout = null;\r\n    Options.extend(this, options);\r\n  }\r\n\r\n}","import Options from 'options';\r\n\r\nexport default class RestResponseMessage {\r\n\r\n  constructor(options) {\r\n    this.requestMessage = null;\r\n    this.status = null;\r\n    this.statusText = null;\r\n    this.headers = null;\r\n    this.content = null;\r\n    this.contentType = null;\r\n    Options.extend(this, options);\r\n  }\r\n\r\n}","import CancellationToken from 'cancellation-token';\r\nimport CancellationTokenSource from 'cancellation-token-source';\r\nimport RestClient from 'rest-client';\r\nimport RestRequestMessage from 'rest-request-message';\r\nimport RestResponseMessage from 'rest-response-message';\r\nimport RestBulkRequestMessage from 'rest-bulk-request-message';\r\nimport RestBulkResponseMessage from 'rest-bulk-response-message';\r\nimport Batch from 'batch';\r\nimport QueryBase from 'query-base';\r\nimport Query from 'query';\r\nimport Repository from 'repository';\r\nimport MediaTypeFormatter from 'media-type-formatter';\r\nimport JsonMediaTypeFormatter from 'json-media-type-formatter';\r\nimport QueryFactory from 'query-factory';\r\nimport QueryTranslator from 'query-translator';\r\n\r\nexport {\r\n  CancellationToken,\r\n  CancellationTokenSource,\r\n  RestClient,\r\n  RestRequestMessage,\r\n  RestResponseMessage,\r\n  RestBulkRequestMessage,\r\n  RestBulkResponseMessage,\r\n  Batch,\r\n  QueryBase,\r\n  Query,\r\n  Repository,\r\n  MediaTypeFormatter,\r\n  JsonMediaTypeFormatter,\r\n  QueryFactory,\r\n  QueryTranslator\r\n};"]}